class Solution {
    // brute force - O(no of 1's) * O(m*n)
    // TC - O(m*n) 
    // Sc - O(1)
    public int[][] updateMatrix(int[][] mat) {
        
        Queue<int[]> q = new LinkedList<>();
        
        for(int i = 0; i < mat.length; i++) {
            for(int j= 0; j < mat[0].length; j++) {
                if(mat[i][j] == 0) {
                    q.add(new int[] {i,j});
                }else {
                    mat[i][j] = -1;
                }
            }
        }
        int [][]dirs = {{0,1}, {0,-1}, {1,0}, {-1,0}};
        
        int length = 0;
        while(!q.isEmpty()) {
            int size = q.size();
            length++;
            while(size--> 0) {
                int []cell = q.poll();
                for(int []dir : dirs) {
                    int r = cell[0] + dir[0];
                    int c = cell[1] + dir[1];
                    
                    if(r<0 || c<0 || r>=mat.length || c>= mat[0].length || mat[r][c] != -1) {
                        continue;
                    }
                    mat[r][c] = length;
                    // add the elements (i,j) to the queue for the next iteration
                    q.add(new int[]{r,c});
                }
            }
        }
        return mat;
    }
}
